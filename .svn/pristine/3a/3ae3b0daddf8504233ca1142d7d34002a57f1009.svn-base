import { Component, OnInit, ViewChild } from '@angular/core';
import { MatPaginator } from '@angular/material/paginator';
import { MatTableDataSource } from '@angular/material/table';
import { SimsHttpCoreServices } from 'src/app/services/sims-http-core.service';
import { CommonService } from 'src/app/services/common.service';
import { TaxDetails } from 'src/app/models/invoice-item.model';


@Component({
  selector: 'app-tax-freight-detail-tab',
  templateUrl: './tax-freight-detail-tab.component.html',
  styleUrls: ['./tax-freight-detail-tab.component.scss']
})
export class TaxFreightDetailTabComponent implements OnInit {
  invNum:string;
  batchId:string;
  vendordataRequest: string;
  soapRequest: string;
  TAX_ELEMENT_DATA:TaxDetails[]=[];
  displayedTaxColumns: string[] = ['option', 'payment_mode', 'tax_code',  'amount', 'base_amount', 'gl_code', 'cost_center','exempt','tax_indicator','text'];
  taxDetailsDataSource = new MatTableDataSource<TaxDetails>();

  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;

  columnHeaderName = [
    {
      lineNo: 0,
      headerId: "option"
    },

    {
      lineNo: 1,
      headerId: "payment_mode"
    },

    {
      lineNo: 2,
      headerId: "tax_code"
    },
    {
      lineNo: 3,
      headerId: "amount"
    },
    {
      lineNo: 4,
      headerId: "base_amount"
    },
    {
      lineNo: 5,
      headerId: "gl_code"
    },
    {
      lineNo: 6,
      headerId: "cost_center"
    },
    {
      lineNo: 7,
      headerId: "exempt"
    },
    {
      lineNo: 8,
      headerId: "tax_indicator"
    },
    {
      lineNo: 9,
      headerId: "text"
    }
  ]



  constructor(
    private simsHttpCoreServices: SimsHttpCoreServices,
    private commonService: CommonService,
  ) { }

  ngOnInit() {
    this.invNum='002';
    this.batchId='581';
    this.taxDetailsDataSource.paginator = this.paginator;
    this.getTaxFreightDetails(this.batchId,this.invNum);
  }
  getTaxFreightDetails(batchId:string,invoiceNo:string){
  
    this.vendordataRequest = "<invoice_no>" + invoiceNo + "</invoice_no><batch_id>"+batchId+"</batch_id>";
    this.soapRequest = this.commonService.getSoapBody("GetTaxFreightLinesByInvNo", "http://schemas.cordys.com/WINDatabaseMetadata", this.vendordataRequest);
    this.simsHttpCoreServices.httpPost(this.soapRequest).subscribe(TaxFreightDetailResult => {
      let TaxFreightDetaillist = this.commonService.parseXML(TaxFreightDetailResult);
      let TaxFreightDetail=TaxFreightDetaillist["__zone_symbol__value"]["SOAP:Envelope"]["SOAP:Body"][0].GetTaxFreightLinesByInvNoResponse[0].tuple;
      TaxFreightDetail.map((x,index)=>{let taxFreightDetailModel={
            option: x.old[0].ap_tax_frieght_details[0].slno[0] instanceof Object?"undefined": x.old[0].ap_tax_frieght_details[0].slno[0],
            payment_mode:x.old[0].ap_tax_frieght_details[0].trans_type[0] instanceof Object?"undefined": x.old[0].ap_tax_frieght_details[0].trans_type[0],
            tax_code:x.old[0].ap_tax_frieght_details[0].tax_code[0] instanceof Object?"undefined": x.old[0].ap_tax_frieght_details[0].tax_code[0],
            amount:x.old[0].ap_tax_frieght_details[0].amount[0] instanceof Object?"undefined": x.old[0].ap_tax_frieght_details[0].amount[0],
            base_amount:x.old[0].ap_tax_frieght_details[0].line_base_amt[0] instanceof Object?"undefined": x.old[0].ap_tax_frieght_details[0].line_base_amt[0],
            gl_code:x.old[0].ap_tax_frieght_details[0].glcode[0] instanceof Object?"undefined": x.old[0].ap_tax_frieght_details[0].glcode[0],
            cost_center:x.old[0].ap_tax_frieght_details[0].cost_center[0] instanceof Object?"undefined": x.old[0].ap_tax_frieght_details[0].cost_center[0],
            exempt:x.old[0].ap_tax_frieght_details[0].exemption[0] instanceof Object?"undefined": x.old[0].ap_tax_frieght_details[0].exemption[0],
            tax_indicator:x.old[0].ap_tax_frieght_details[0].tax_indicator[0] instanceof Object?"undefined": x.old[0].ap_tax_frieght_details[0].tax_indicator[0],
            text:x.old[0].ap_tax_frieght_details[0].remarks[0] instanceof Object?"undefined": x.old[0].ap_tax_frieght_details[0].remarks[0],
           }
      this.TAX_ELEMENT_DATA.push(taxFreightDetailModel);
      if(TaxFreightDetail.length-1==index)
        this.taxDetailsDataSource = new MatTableDataSource<TaxDetails>(this.TAX_ELEMENT_DATA);
    });
    });
  }


}
